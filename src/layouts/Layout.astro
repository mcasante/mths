---
import { ViewTransitions } from 'astro:transitions';

import "@/styles/globals.css"
import { cn } from "@/lib/utils";

interface Props {
	title: string;
	class?: string
}

const { title } = Astro.props;

import ModeToggle from '@/components/ModeToggle.vue';
import Logo from '@/components/Logo.vue';
---

<!doctype html>
<html lang="en" class="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body class="min-h-screen flex flex-col">
		<header class="flex justify-center">
			<div class="container flex justify-between items-center py-4">
				<Logo />

				<nav>
					<ul class="flex gap-4">
						<li>
							<a href="/">Home</a>
						</li>
						<li>
							<a href="/another-page">About</a>
						</li>
				</nav>

				<ModeToggle client:load />
			</div>
		</header>

		<main class={cn('sm:container px-2', Astro.props.class)}>
			<slot />
		</main>

		<script is:inline>
			const getThemePreference = () => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
			};
			const isDark = getThemePreference() === 'dark';
			document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
		
			if (typeof localStorage !== 'undefined') {
				const observer = new MutationObserver(() => {
					const isDark = document.documentElement.classList.contains('dark');
					localStorage.setItem('theme', isDark ? 'dark' : 'light');
				});
				observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
			}
		</script>
	</body>
</html>
